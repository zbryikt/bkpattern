// Generated by LiveScript 1.2.0
var main;
main = function($scope, $interval){
  var canvas, ctx, grid, grid1, grid2, grid3, maze, res$, i$, i, list, render;
  canvas = document.getElementById("canvas");
  ctx = canvas.getContext("2d");
  grid = function(){
    var res$, i$, y, lresult$, j$, x, lresult1$, lresult2$;
    res$ = [];
    for (i$ = 0; i$ < 32; ++i$) {
      y = i$;
      lresult$ = [];
      for (j$ = 0; j$ < 32; ++j$) {
        x = j$;
        lresult$.push(Math.random());
      }
      res$.push(lresult$);
    }
    this.cur = res$;
    res$ = [];
    for (i$ = 0; i$ < 32; ++i$) {
      y = i$;
      lresult1$ = [];
      for (j$ = 0; j$ < 32; ++j$) {
        x = j$;
        lresult1$.push(0);
      }
      res$.push(lresult1$);
    }
    this.fur = res$;
    res$ = [];
    for (i$ = 0; i$ < 512; ++i$) {
      x = i$;
      if (Math.random() > 0.8) {
        res$.push(1);
      } else {
        res$.push(0);
      }
    }
    this.pat = res$;
    res$ = [];
    for (i$ = 0; i$ < 32; ++i$) {
      y = i$;
      lresult2$ = [];
      for (j$ = 0; j$ < 32; ++j$) {
        x = j$;
        lresult2$.push(1);
      }
      res$.push(lresult2$);
    }
    this.tic = res$;
    return this;
  };
  grid.prototype.iterate = function(){
    var i$, y, j$, x, p, r, k$, dy, l$, dx, cx, cy, tick, dv, ref$, tmp;
    for (i$ = 0; i$ < 32; ++i$) {
      y = i$;
      for (j$ = 0; j$ < 32; ++j$) {
        x = j$;
        this.fur[y][x] = this.cur[y][x];
      }
    }
    for (i$ = 0; i$ < 32; ++i$) {
      y = i$;
      for (j$ = 0; j$ < 32; ++j$) {
        x = j$;
        p = 1;
        r = 0;
        for (k$ = -1; k$ < 2; ++k$) {
          dy = k$;
          for (l$ = -1; l$ < 2; ++l$) {
            dx = l$;
            cx = x + dx;
            cy = y + dy;
            if (cx < 0) {
              cx = 31;
            }
            if (cx > 31) {
              cx = 0;
            }
            if (cy < 0) {
              cy = 31;
            }
            if (cy > 31) {
              cy = 0;
            }
            if (this.cur[cy][cx] >= 0.5) {
              r += p;
            }
            p *= 2;
          }
        }
        tick = this.tic[y][x];
        dv = 0.1 - tick / 1000;
        dv >= 0 || (dv = 0);
        this.tic[y][x] = this.tic[y][x] + 1;
        if (this.pat[r]) {
          this.fur[y][x] += dv;
        } else {
          this.fur[y][x] -= dv;
        }
      }
    }
    for (i$ = 0; i$ < 32; ++i$) {
      y = i$;
      for (j$ = 0; j$ < 32; ++j$) {
        x = j$;
        if (this.fur[y][x] >= 0.9 || this.fur[y][x] <= 0.1) {
          this.tic[y][x] = 1;
        }
        if (this.tic[y][x] >= 100 && this.fur[y][x] < 0.99) {
          this.fur[y][x] = this.fur[y][x] / 2;
        }
        (ref$ = this.fur[y])[x] >= 0 || (ref$[x] = 0);
        (ref$ = this.fur[y])[x] <= 1 || (ref$[x] = 1);
      }
    }
    tmp = this.fur;
    this.fur = this.cur;
    return this.cur = tmp;
  };
  $('#canvas').on('mousemove', function(e){
    var x, y, i$, dy, lresult$, j$, dx, cy, cx, results$ = [];
    x = e.offsetX;
    y = e.offsetY;
    x = parseInt(x / 10);
    y = parseInt(y / 10);
    for (i$ = -1; i$ <= 1; ++i$) {
      dy = i$;
      lresult$ = [];
      for (j$ = -1; j$ <= 1; ++j$) {
        dx = j$;
        cy = y + dy;
        cx = x + dx;
        if (cx < 0) {
          cx = 31;
        }
        if (cx > 31) {
          cx = 0;
        }
        if (cy < 0) {
          cy = 31;
        }
        if (cy > 31) {
          cy = 0;
        }
        grid1.cur[cy][cx] = 1;
        grid2.cur[cy][cx] = 1;
        lresult$.push(grid3.cur[cy][cx] = 1);
      }
      results$.push(lresult$);
    }
    return results$;
  });
  grid1 = new grid();
  grid2 = new grid();
  grid3 = new grid();
  res$ = [];
  for (i$ = 0; i$ < 512; ++i$) {
    i = i$;
    res$.push(0);
  }
  maze = res$;
  list = [0, 2, 8, 32, 128, 3, 6, 9, 72, 36, 288, 384, 192, 18, 24, 48, 144, 11, 14, 17, 80, 392, 200, 130, 40, 56, 19, 22, 25, 88, 52, 304, 208, 400, 146, 178, 154, 184, 58];
  list.map(function(it){
    return maze[it] = 1;
  });
  grid1.pat = maze;
  render = function(){
    var i$, y, lresult$, j$, x, r, g, b, results$ = [];
    for (i$ = 0; i$ < 32; ++i$) {
      y = i$;
      lresult$ = [];
      for (j$ = 0; j$ < 32; ++j$) {
        x = j$;
        r = parseInt(grid1.cur[y][x] * 255.0);
        g = parseInt(grid2.cur[y][x] * 255.0);
        b = parseInt(grid3.cur[y][x] * 255.0);
        r = parseInt(grid1.cur[y][x] * 64.0 + grid2.cur[y][x] * 192.0);
        g = parseInt(grid1.cur[y][x] * 192.0 + grid2.cur[y][x] * 64.0);
        b = 0;
        ctx.fillStyle = "rgba(" + r + "," + g + "," + b + ",1)";
        lresult$.push(ctx.fillRect(x * 10, y * 10, 9, 9));
      }
      results$.push(lresult$);
    }
    return results$;
  };
  render();
  return $interval(function(){
    grid1.iterate();
    grid2.iterate();
    grid3.iterate();
    return render();
  }, 10);
};